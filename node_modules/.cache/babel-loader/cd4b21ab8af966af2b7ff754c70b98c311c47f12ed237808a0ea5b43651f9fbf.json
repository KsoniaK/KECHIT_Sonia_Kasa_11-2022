{"ast":null,"code":"var _jsxFileName = \"/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET11/Kechit_Sonia_Kasa_122022/kasa1/src/components/AccordionApropos.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useRef } from \"react\";\nimport image from \"../styles/img/down-arrow.png\";\n\n// Accordeon\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Accordion(props) {\n  _s();\n  const [isOpen, setIsOpen] = useState(false);\n  const [Height, setHeight] = useState(\"0px\");\n  // const [open, setOpen] = useState(false);\n\n  // useRef = connaître la hauteur de l'élément du DOM\n  const content = useRef(null);\n  // Appel de la fonction pour ouvrir ou fermer\n  function toggleAccordion() {\n    // S'assurer qu'il y a bien un contenu avant\n    if (content && content.current) {\n      setIsOpen(isOpen === false ? true : false);\n      setHeight(isOpen === true ? \"0px\" : content.current.scrollHeight + \"px\");\n    }\n  }\n  const arrowDirection = isOpen ? \"down\" : \"up\";\n  return /*#__PURE__*/_jsxDEV(\"article\", {\n    className: \"accordions_apropos\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title_container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: toggleAccordion,\n        className: \"about_button\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"about_title\",\n          children: props.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          className: arrowDirection,\n          id: \"arrow\",\n          src: image,\n          alt: \"drop-down\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n_s(Accordion, \"wTIx97KP1UkWUmE8M5Q0SQW8s4s=\");\n_c = Accordion;\nexport default Accordion;\nvar _c;\n$RefreshReg$(_c, \"Accordion\");","map":{"version":3,"names":["React","useState","useRef","image","Accordion","props","isOpen","setIsOpen","Height","setHeight","content","toggleAccordion","current","scrollHeight","arrowDirection","title"],"sources":["/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET11/Kechit_Sonia_Kasa_122022/kasa1/src/components/AccordionApropos.js"],"sourcesContent":["import React, { useState, useRef } from \"react\";\nimport image from \"../styles/img/down-arrow.png\";\n\n// Accordeon\nfunction Accordion(props) {\n  const [isOpen, setIsOpen] = useState(false);\n  const [Height, setHeight] = useState(\"0px\");\n  // const [open, setOpen] = useState(false);\n\n  // useRef = connaître la hauteur de l'élément du DOM\n  const content = useRef(null);\n  // Appel de la fonction pour ouvrir ou fermer\n  function toggleAccordion() {\n    // S'assurer qu'il y a bien un contenu avant\n    if (content && content.current) {\n      setIsOpen(isOpen === false ? true : false);\n      setHeight(isOpen === true ? \"0px\" : content.current.scrollHeight + \"px\");\n    }\n  }\n  const arrowDirection = isOpen ? \"down\" : \"up\";\n\n  return (\n    <article className=\"accordions_apropos\">\n      <div className=\"title_container\">\n        <button onClick={toggleAccordion} className=\"about_button\">\n          <p className=\"about_title\">{props.title}</p>\n          <img\n            className={arrowDirection}\n            id=\"arrow\"\n            src={image}\n            alt=\"drop-down\"\n          />\n        </button>\n      </div>\n    </article>\n  );\n}\nexport default Accordion;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,MAAM,QAAQ,OAAO;AAC/C,OAAOC,KAAK,MAAM,8BAA8B;;AAEhD;AAAA;AACA,SAASC,SAAS,CAACC,KAAK,EAAE;EAAA;EACxB,MAAM,CAACC,MAAM,EAAEC,SAAS,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAC3C,MAAM,CAACO,MAAM,EAAEC,SAAS,CAAC,GAAGR,QAAQ,CAAC,KAAK,CAAC;EAC3C;;EAEA;EACA,MAAMS,OAAO,GAAGR,MAAM,CAAC,IAAI,CAAC;EAC5B;EACA,SAASS,eAAe,GAAG;IACzB;IACA,IAAID,OAAO,IAAIA,OAAO,CAACE,OAAO,EAAE;MAC9BL,SAAS,CAACD,MAAM,KAAK,KAAK,GAAG,IAAI,GAAG,KAAK,CAAC;MAC1CG,SAAS,CAACH,MAAM,KAAK,IAAI,GAAG,KAAK,GAAGI,OAAO,CAACE,OAAO,CAACC,YAAY,GAAG,IAAI,CAAC;IAC1E;EACF;EACA,MAAMC,cAAc,GAAGR,MAAM,GAAG,MAAM,GAAG,IAAI;EAE7C,oBACE;IAAS,SAAS,EAAC,oBAAoB;IAAA,uBACrC;MAAK,SAAS,EAAC,iBAAiB;MAAA,uBAC9B;QAAQ,OAAO,EAAEK,eAAgB;QAAC,SAAS,EAAC,cAAc;QAAA,wBACxD;UAAG,SAAS,EAAC,aAAa;UAAA,UAAEN,KAAK,CAACU;QAAK;UAAA;UAAA;UAAA;QAAA,QAAK,eAC5C;UACE,SAAS,EAAED,cAAe;UAC1B,EAAE,EAAC,OAAO;UACV,GAAG,EAAEX,KAAM;UACX,GAAG,EAAC;QAAW;UAAA;UAAA;UAAA;QAAA,QACf;MAAA;QAAA;QAAA;QAAA;MAAA;IACK;MAAA;MAAA;MAAA;IAAA;EACL;IAAA;IAAA;IAAA;EAAA,QACE;AAEd;AAAC,GAhCQC,SAAS;AAAA,KAATA,SAAS;AAiClB,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}