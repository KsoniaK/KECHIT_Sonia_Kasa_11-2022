{"ast":null,"code":"var _jsxFileName = \"/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET11/test/kasa1/src/pages/Logement.js\";\nimport React from \"react\";\nimport \"../styles/Logement.css\";\nimport GetData from '../service/logementService';\nimport Carousel from \"../components/Carousel\";\nimport Accordion from \"../components/Accordion\";\nimport HeaderLogement from \"../components/HeaderLogement\";\nimport Proprietaire from \"../components/Proprietaire\";\nimport Note from \"../components/Note\";\n\n// URLSearchParams : définit des méthodes utilitaires pour travailler avec la chaîne de requête (les paramètres GET) d’une URL\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst url = new URLSearchParams(window.location.search);\n// Retourne la première valeur associée au paramètre de recherche donné (ici l'id du loueur)\nconst idUrl = url.get('id');\nconsole.log(idUrl);\nfunction FicheLogement() {\n  const resultFetch = GetData(\"/db/logements.json\");\n  const locations = resultFetch.data;\n  if (locations.id.filter(location => idUrl === location.id)) {\n    console.log(\"ok\");\n  }\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    children: locations.map((location, index) => /*#__PURE__*/_jsxDEV(\"section\", {\n      children: [/*#__PURE__*/_jsxDEV(Carousel, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(HeaderLogement, {\n          title: location.title,\n          location: location.location,\n          tags: location.tags\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Proprietaire, {\n          name: location.host.name,\n          avatar: location.host.picture\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Note, {\n          rating: parseInt(location.rating)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"w-full grid grid-cols-1 md:grid-cols-2 md:gap-8\",\n        children: [/*#__PURE__*/_jsxDEV(Accordion, {\n          title: \"Description\",\n          content: location.description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n          title: \"\\xC9quipement\",\n          content: location.equipments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 11\n      }, this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = FicheLogement;\nexport default FicheLogement;\n\n// import '../styles/Logement.css'\n// import { useEffect, useState } from \"react\"\n// import { useParams } from \"react-router-dom\";\n// import GetData from '../service/logementService';\n// import HeaderLogement from \"../components/HeaderLogement\";\n// // import Slider from \"../../components/carousel/Carousel\"\n// // import Footer from \"../../components/footer/Footer\";\n// import Accordion from \"../components/Accordion\";\n// // // import Note from \"../components/Note\";\n// import greyStar from '../styles/img/Vector.png';\n// import redStar from '../styles/img/Vector.png';\n\n// export default function Accomodation() {\n//   const resultFetch = GetData(\"/db/logements.json\");\n//   const locations = resultFetch.data;\n//   console.log(locations);\n\n// \tconst [imageSlider, setImageSlider] = useState([]);\n\n// \tconst idAccomodation = useParams('id').id;\n// \tconst dataCurrentAccomodation = locations.filter(location => location.id === idAccomodation);\n\n// \tuseEffect(() => {\n// \t\tconst dataCurrentAccomodation = locations.filter(location => location.id === idAccomodation);\n// \t\tsetImageSlider(dataCurrentAccomodation[0].pictures);\n// \t}, [idAccomodation]);\n\n// \tconst name = dataCurrentAccomodation[0].host.name.split(' '); \n// \tconst rating = dataCurrentAccomodation[0].rating;\n// \tconst description  = dataCurrentAccomodation[0].description;\n// \tconst equipments = dataCurrentAccomodation[0].equipments;\n\n// \treturn (\n// \t\t<>\n// \t\t\t<HeaderLogement/>\n// \t\t\t{/* <Slider imageSlider={imageSlider}/> */}\n// \t\t\t<main className=\"accomodation\">\n//         luuuuuuuuuuuuuuu\n// \t\t\t\t<div className=\"accomodation_content\">\n// \t\t\t\t\t<div className=\"accomodation_content_infos\">\n// \t\t\t\t\t\t<h1>{dataCurrentAccomodation[0].title}</h1>\n// \t\t\t\t\t\t<p>{dataCurrentAccomodation[0].location}</p>\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t{dataCurrentAccomodation[0].tags.map((tag, index) => {\n// \t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t<button key={index}>{tag}</button>\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"accomodation_content_host\">\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<div className='accomodation_content_host_name'>\n// \t\t\t\t\t\t\t\t<span>{name[0]}</span>\n// \t\t\t\t\t\t\t\t<span>{name[1]}</span>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t<img src={dataCurrentAccomodation[0].host.picture} alt=\"host of this accomodation\" />\n// \t\t\t\t\t\t</div>\n\n// \t\t\t\t\t\t<div className=\"accomodation_content_host_stars\">\n// \t\t\t\t\t\t\t{[...Array(5)].map((star, index) => {\n// \t\t\t\t\t\t\t\tconst ratingValue = index + 1;\n// \t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t<img key={index} src={ratingValue <= rating ? redStar : greyStar} alt=\"star\" />\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"accomodation_collapse\">\n// \t\t\t\t\t<div className=\"accomodation_collapse_item\">\n// \t\t\t\t\t\t<Accordion title={'Description'} content={description} />\t\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"accomodation_collapse_item\">\n// \t\t\t\t\t\t<Accordion title={'Équipements'} content={equipments}/>\n// \t\t\t\t\t</div>\t\n// \t\t\t\t</div>\n// \t\t\t</main>\n// \t\t</>\n// \t)\n// }\nvar _c;\n$RefreshReg$(_c, \"FicheLogement\");","map":{"version":3,"names":["React","GetData","Carousel","Accordion","HeaderLogement","Proprietaire","Note","url","URLSearchParams","window","location","search","idUrl","get","console","log","FicheLogement","resultFetch","locations","data","id","filter","map","index","title","tags","host","name","picture","parseInt","rating","description","equipments"],"sources":["/Users/kechitsonia/Desktop/OCR/DEV_FRONT/PROJET11/test/kasa1/src/pages/Logement.js"],"sourcesContent":["import React from \"react\"\nimport \"../styles/Logement.css\";\nimport GetData from '../service/logementService';\nimport Carousel from \"../components/Carousel\";\nimport Accordion from \"../components/Accordion\";\nimport HeaderLogement from \"../components/HeaderLogement\";\nimport Proprietaire from \"../components/Proprietaire\";\nimport Note from \"../components/Note\";\n\n\n// URLSearchParams : définit des méthodes utilitaires pour travailler avec la chaîne de requête (les paramètres GET) d’une URL\nconst url = new URLSearchParams(window.location.search);\n// Retourne la première valeur associée au paramètre de recherche donné (ici l'id du loueur)\nconst idUrl = url.get('id');\nconsole.log(idUrl);\n\nfunction FicheLogement() {\n  const resultFetch = GetData(\"/db/logements.json\");\n  const locations = resultFetch.data;\n\n\n\n  if (locations.id.filter(location => idUrl === location.id)) {\n    console.log(\"ok\");\n  }\n\n  return (\n    <main>\n      {locations.map((location, index) => (\n        <section key={index}>\n          <Carousel/>\n          <div>\n            <HeaderLogement title={location.title} location={location.location} tags={location.tags} />\n            <Proprietaire name={location.host.name} avatar={location.host.picture} />\n            <Note rating={parseInt(location.rating)} />\n          </div>\n          <div className=\"w-full grid grid-cols-1 md:grid-cols-2 md:gap-8\">\n            <Accordion title=\"Description\" content={location.description} />\n            <Accordion title=\"Équipement\" content={location.equipments} />\n          </div>\n      </section> \n      ))}\n    </main>\n  )\n}\nexport default FicheLogement;\n\n\n\n// import '../styles/Logement.css'\n// import { useEffect, useState } from \"react\"\n// import { useParams } from \"react-router-dom\";\n// import GetData from '../service/logementService';\n// import HeaderLogement from \"../components/HeaderLogement\";\n// // import Slider from \"../../components/carousel/Carousel\"\n// // import Footer from \"../../components/footer/Footer\";\n// import Accordion from \"../components/Accordion\";\n// // // import Note from \"../components/Note\";\n// import greyStar from '../styles/img/Vector.png';\n// import redStar from '../styles/img/Vector.png';\n\n\n// export default function Accomodation() {\n//   const resultFetch = GetData(\"/db/logements.json\");\n//   const locations = resultFetch.data;\n//   console.log(locations);\n\t\n// \tconst [imageSlider, setImageSlider] = useState([]);\n\n// \tconst idAccomodation = useParams('id').id;\n// \tconst dataCurrentAccomodation = locations.filter(location => location.id === idAccomodation);\n\n// \tuseEffect(() => {\n// \t\tconst dataCurrentAccomodation = locations.filter(location => location.id === idAccomodation);\n// \t\tsetImageSlider(dataCurrentAccomodation[0].pictures);\n// \t}, [idAccomodation]);\n\n// \tconst name = dataCurrentAccomodation[0].host.name.split(' '); \n// \tconst rating = dataCurrentAccomodation[0].rating;\n// \tconst description  = dataCurrentAccomodation[0].description;\n// \tconst equipments = dataCurrentAccomodation[0].equipments;\n\n// \treturn (\n// \t\t<>\n// \t\t\t<HeaderLogement/>\n// \t\t\t{/* <Slider imageSlider={imageSlider}/> */}\n// \t\t\t<main className=\"accomodation\">\n//         luuuuuuuuuuuuuuu\n// \t\t\t\t<div className=\"accomodation_content\">\n// \t\t\t\t\t<div className=\"accomodation_content_infos\">\n// \t\t\t\t\t\t<h1>{dataCurrentAccomodation[0].title}</h1>\n// \t\t\t\t\t\t<p>{dataCurrentAccomodation[0].location}</p>\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t{dataCurrentAccomodation[0].tags.map((tag, index) => {\n// \t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t<button key={index}>{tag}</button>\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"accomodation_content_host\">\n// \t\t\t\t\t\t<div>\n// \t\t\t\t\t\t\t<div className='accomodation_content_host_name'>\n// \t\t\t\t\t\t\t\t<span>{name[0]}</span>\n// \t\t\t\t\t\t\t\t<span>{name[1]}</span>\n// \t\t\t\t\t\t\t</div>\n// \t\t\t\t\t\t\t<img src={dataCurrentAccomodation[0].host.picture} alt=\"host of this accomodation\" />\n// \t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\n// \t\t\t\t\t\t<div className=\"accomodation_content_host_stars\">\n// \t\t\t\t\t\t\t{[...Array(5)].map((star, index) => {\n// \t\t\t\t\t\t\t\tconst ratingValue = index + 1;\n// \t\t\t\t\t\t\t\treturn (\n// \t\t\t\t\t\t\t\t\t<img key={index} src={ratingValue <= rating ? redStar : greyStar} alt=\"star\" />\n// \t\t\t\t\t\t\t\t)\n// \t\t\t\t\t\t\t})}\n// \t\t\t\t\t\t</div>\n// \t\t\t\t\t</div>\n// \t\t\t\t</div>\n// \t\t\t\t<div className=\"accomodation_collapse\">\n// \t\t\t\t\t<div className=\"accomodation_collapse_item\">\n// \t\t\t\t\t\t<Accordion title={'Description'} content={description} />\t\n// \t\t\t\t\t</div>\n// \t\t\t\t\t<div className=\"accomodation_collapse_item\">\n// \t\t\t\t\t\t<Accordion title={'Équipements'} content={equipments}/>\n// \t\t\t\t\t</div>\t\n// \t\t\t\t</div>\n// \t\t\t</main>\n// \t\t</>\n// \t)\n// }"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,wBAAwB;AAC/B,OAAOC,OAAO,MAAM,4BAA4B;AAChD,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,OAAOC,SAAS,MAAM,yBAAyB;AAC/C,OAAOC,cAAc,MAAM,8BAA8B;AACzD,OAAOC,YAAY,MAAM,4BAA4B;AACrD,OAAOC,IAAI,MAAM,oBAAoB;;AAGrC;AAAA;AACA,MAAMC,GAAG,GAAG,IAAIC,eAAe,CAACC,MAAM,CAACC,QAAQ,CAACC,MAAM,CAAC;AACvD;AACA,MAAMC,KAAK,GAAGL,GAAG,CAACM,GAAG,CAAC,IAAI,CAAC;AAC3BC,OAAO,CAACC,GAAG,CAACH,KAAK,CAAC;AAElB,SAASI,aAAa,GAAG;EACvB,MAAMC,WAAW,GAAGhB,OAAO,CAAC,oBAAoB,CAAC;EACjD,MAAMiB,SAAS,GAAGD,WAAW,CAACE,IAAI;EAIlC,IAAID,SAAS,CAACE,EAAE,CAACC,MAAM,CAACX,QAAQ,IAAIE,KAAK,KAAKF,QAAQ,CAACU,EAAE,CAAC,EAAE;IAC1DN,OAAO,CAACC,GAAG,CAAC,IAAI,CAAC;EACnB;EAEA,oBACE;IAAA,UACGG,SAAS,CAACI,GAAG,CAAC,CAACZ,QAAQ,EAAEa,KAAK,kBAC7B;MAAA,wBACE,QAAC,QAAQ;QAAA;QAAA;QAAA;MAAA,QAAE,eACX;QAAA,wBACE,QAAC,cAAc;UAAC,KAAK,EAAEb,QAAQ,CAACc,KAAM;UAAC,QAAQ,EAAEd,QAAQ,CAACA,QAAS;UAAC,IAAI,EAAEA,QAAQ,CAACe;QAAK;UAAA;UAAA;UAAA;QAAA,QAAG,eAC3F,QAAC,YAAY;UAAC,IAAI,EAAEf,QAAQ,CAACgB,IAAI,CAACC,IAAK;UAAC,MAAM,EAAEjB,QAAQ,CAACgB,IAAI,CAACE;QAAQ;UAAA;UAAA;UAAA;QAAA,QAAG,eACzE,QAAC,IAAI;UAAC,MAAM,EAAEC,QAAQ,CAACnB,QAAQ,CAACoB,MAAM;QAAE;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QACvC,eACN;QAAK,SAAS,EAAC,iDAAiD;QAAA,wBAC9D,QAAC,SAAS;UAAC,KAAK,EAAC,aAAa;UAAC,OAAO,EAAEpB,QAAQ,CAACqB;QAAY;UAAA;UAAA;UAAA;QAAA,QAAG,eAChE,QAAC,SAAS;UAAC,KAAK,EAAC,eAAY;UAAC,OAAO,EAAErB,QAAQ,CAACsB;QAAW;UAAA;UAAA;UAAA;QAAA,QAAG;MAAA;QAAA;QAAA;QAAA;MAAA,QAC1D;IAAA,GAVMT,KAAK;MAAA;MAAA;MAAA;IAAA,QAYpB;EAAC;IAAA;IAAA;IAAA;EAAA,QACG;AAEX;AAAC,KA5BQP,aAAa;AA6BtB,eAAeA,aAAa;;AAI5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}